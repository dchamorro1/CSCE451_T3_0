#include <iostream> 
#include "interpreter.h"

// Esolangs are fun! Gur xrl
// They are the bane of my existance!  vf he
// Here are some examples Piet, BF, Whitespace, lama! ona zhyyre

#define RUN_PROG(prog,offset,v) execute_bf((instruction_t*)prog,offset,v)


// choose a and b find c though m xor (a xor b)
// m = The key is Urban Muller
// m = 546865206b657920697320557262616e204d756c6c6572
// a = 347e64aadfd2b124565953e62dd37dcf000ef5815cacc2
// b = 71d328ad968b089823f2dfa2ad2ecf8f7ff3a52bda02c2
// From cyberchef https://cyberchef.org/#recipe=XOR(%7B'option':'Hex','string':'347e64aadfd2b124565953e62dd37dcf000ef5815cacc2'%7D,'Standard',true)XOR(%7B'option':'Hex','string':'71d328ad968b089823f2dfa2ad2ecf8f7ff3a52bda02c2'%7D,'Standard',true)To_Hex('None',0)&input=VGhlIGtleSBpcyBVcmJhbiBNdWxsZXI
// c = 11c52927223cc09c1cd8ac11f29fd32e5fb025c6eacb72

// a 347e64aadfd2b124565953e62dd37dcf000ef5815cacc2
// b 71d328ad968b089823f2dfa2ad2ecf8f7ff3a52bda02c2
// c 11c52927223cc09c1cd8ac11f29fd32e5fb025c6eacb72
// rand1 a689fd13da3d58b7c124ab13a45cf25f3e11253ff45d01
// rand2 a1e2a6150370a404a6554d8e1811db586c73b62ec45f40
// rand3 32f46a1be834667597ac6bd3b4c4e7b136166715bc32c5
// rand4 5178e264e28cfd69cbe6080ccb27932ef12bd0f81d2842
// hint1 65736f746572696320747572696e67206d616368696e65 esoteric turing machine
// hint2 5f5f6e65656420746872656520664f522077696e215f5f __need three fOR win!__
const unsigned short PROGRAMS[][1024] = {
// bf_codes/rand1 42 a689fd13da3d58b7c124ab13a45cf25f3e11253ff45d01
{45,0,45,0,45,0,45,0,45,0,45,0,45,0,49,44,43,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,43,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,43,0,45,0,45,0,45,0,45,0,45,0,45,0,45,0,44,0,44,0,44,0,46,0,50,7,43,0,46,0,47,0,43,0,46,0,46,0,47,0,45,0,45,0,47,0,45,0,47,0,44,0,45,0,45,0,45,0,45,0,45,0,47,0,46,0,46,0,47,0,43,0,43,0,47,0,45,0,45,0,47,0,44,0,44,0,47,0,46,0,46,0,46,0,47,0,43,0,43,0,47,0,44,0,44,0,45,0,45,0,45,0,47,0,43,0,43,0,45,0,45,0,47,0,44,0,46,0,47,0,44,0,46,0,46,0,47,0,43,0,46,0,47,0,44,0,45,0,47,0,43,0,43,0,46,0,46,0,46,0,46,0,47,0,45,0,47,0,45,0,45,0,47,0,44,0,44,0,46,0,46,0,47,0,45,0,47,0,43,0,43,0,46,0,46,0,46,0,47,0,45,0,45,0,47,0,44,0,44,0,46,0,47,0,43,0,43,0,45,0,47,0,45,0,47,0,44,0,44,0,45,0,45,0,47,0,45,0,45,0,45,0,47,0,43,0,43,0,46,0,46,0,46,0,47,0,44,0,46,0,46,0,47,0,44,0,47,0,43,0,46,0,46,0,47,0,44,0,46,0,47,0,43,0,46,0,46,0,47,0,47,0,45,0,47,0,45,0,45,0,45,0,47,0,46,0,46,0,47,0,44,0,45,0,47,0,47,0,43,0,45,0,47,0,45,0,47,0,44,0,46,0,46,0,47,0,43,0,43,0,46,0,46,0,47,0,45,0,47,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0,42,0},
// bf_codes/rand2 56 a1e2a6150370a404a6554d8e1811db586c73b62ec45f40
{59,0,59,0,59,0,59,0,59,0,59,0,59,0,63,43,57,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,57,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,57,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,58,0,58,0,58,0,60,0,64,7,57,0,60,0,61,0,57,0,61,0,58,0,59,0,59,0,59,0,59,0,61,0,57,0,59,0,61,0,58,0,60,0,60,0,60,0,60,0,61,0,57,0,59,0,59,0,59,0,59,0,61,0,57,0,61,0,58,0,60,0,61,0,57,0,60,0,61,0,58,0,60,0,60,0,61,0,59,0,59,0,59,0,59,0,61,0,57,0,61,0,58,0,58,0,61,0,57,0,60,0,60,0,60,0,61,0,57,0,61,0,58,0,61,0,58,0,61,0,57,0,59,0,59,0,61,0,60,0,61,0,61,0,60,0,61,0,58,0,59,0,59,0,59,0,61,0,57,0,59,0,59,0,59,0,59,0,61,0,58,0,59,0,61,0,57,0,57,0,59,0,61,0,58,0,61,0,57,0,61,0,61,0,58,0,58,0,60,0,61,0,60,0,60,0,61,0,57,0,60,0,60,0,60,0,61,0,59,0,59,0,59,0,61,0,60,0,60,0,61,0,58,0,59,0,61,0,57,0,59,0,61,0,57,0,59,0,59,0,61,0,58,0,58,0,60,0,61,0,57,0,60,0,61,0,57,0,60,0,61,0,58,0,58,0,59,0,59,0,59,0,61,0,60,0,60,0,61,0,57,0,60,0,60,0,61,0,59,0,61,0,58,0,59,0,59,0,59,0,61,0,57,0,60,0,61,0,57,0,60,0,60,0,61,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0,56,0},
// bf_codes/rand3 12 32f46a1be834667597ac6bd3b4c4e7b136166715bc32c5
{15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,19,32,13,0,15,0,15,0,15,0,15,0,15,0,15,0,13,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,14,0,14,0,16,0,20,9,13,0,16,0,16,0,16,0,17,0,16,0,17,0,13,0,15,0,15,0,15,0,17,0,14,0,15,0,15,0,17,0,15,0,15,0,17,0,13,0,16,0,16,0,16,0,16,0,16,0,17,0,14,0,16,0,16,0,16,0,16,0,16,0,17,0,13,0,15,0,17,0,15,0,15,0,15,0,17,0,14,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,17,0,16,0,16,0,16,0,16,0,16,0,17,0,15,0,17,0,15,0,15,0,17,0,17,0,15,0,17,0,16,0,16,0,17,0,15,0,15,0,15,0,15,0,17,0,16,0,16,0,17,0,13,0,16,0,16,0,16,0,16,0,17,0,15,0,15,0,17,0,14,0,16,0,17,0,13,0,16,0,17,0,15,0,15,0,17,0,14,0,16,0,16,0,16,0,17,0,13,0,16,0,16,0,17,0,14,0,15,0,17,0,13,0,15,0,17,0,14,0,17,0,13,0,15,0,15,0,17,0,14,0,15,0,15,0,15,0,17,0,13,0,16,0,16,0,16,0,17,0,14,0,16,0,16,0,16,0,16,0,16,0,16,0,17,0,15,0,15,0,17,0,15,0,15,0,15,0,17,0,16,0,16,0,16,0,16,0,16,0,17,0,15,0,15,0,15,0,15,0,15,0,17,0,17,0,15,0,17,0,16,0,16,0,16,0,16,0,16,0,16,0,17,0,15,0,15,0,15,0,15,0,17,0,13,0,17,0,15,0,17,0,14,0,16,0,16,0,17,0,16,0,17,0,13,0,17,0,14,0,15,0,15,0,15,0,17,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12,0},
// bf_codes/a 548 347e64aadfd2b124565953e62dd37dcf000ef5815cacc2
{551,0,551,0,551,0,551,0,551,0,551,0,551,0,555,43,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,550,0,550,0,550,0,552,0,556,7,549,0,551,0,551,0,553,0,551,0,553,0,551,0,551,0,551,0,553,0,549,0,551,0,551,0,551,0,553,0,550,0,552,0,553,0,552,0,552,0,553,0,549,0,552,0,552,0,552,0,552,0,553,0,553,0,551,0,551,0,551,0,553,0,551,0,551,0,553,0,552,0,552,0,553,0,549,0,551,0,553,0,550,0,552,0,552,0,553,0,549,0,552,0,553,0,551,0,553,0,550,0,550,0,553,0,551,0,553,0,551,0,553,0,552,0,553,0,551,0,551,0,551,0,551,0,553,0,552,0,552,0,552,0,552,0,553,0,552,0,552,0,553,0,549,0,551,0,551,0,551,0,553,0,550,0,551,0,551,0,551,0,553,0,549,0,549,0,553,0,550,0,552,0,553,0,553,0,549,0,551,0,553,0,550,0,550,0,551,0,553,0,549,0,553,0,552,0,553,0,551,0,551,0,551,0,553,0,549,0,552,0,552,0,552,0,553,0,553,0,553,0,550,0,552,0,553,0,551,0,553,0,550,0,552,0,552,0,553,0,551,0,551,0,551,0,553,0,549,0,549,0,551,0,553,0,551,0,551,0,551,0,551,0,553,0,550,0,552,0,552,0,552,0,553,0,552,0,552,0,553,0,551,0,551,0,553,0,553,0,549,0,552,0,552,0,552,0,553,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0,548,0},
// bf_codes/rand4 159 5178e264e28cfd69cbe6080ccb27932ef12bd0f81d2842
{162,0,162,0,162,0,162,0,162,0,162,0,162,0,166,44,160,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,160,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,160,0,162,0,162,0,162,0,162,0,162,0,162,0,162,0,161,0,161,0,161,0,163,0,167,7,160,0,163,0,163,0,163,0,164,0,160,0,160,0,164,0,161,0,161,0,162,0,162,0,164,0,162,0,164,0,160,0,162,0,162,0,162,0,164,0,160,0,162,0,164,0,161,0,161,0,163,0,163,0,164,0,163,0,163,0,164,0,160,0,164,0,160,0,164,0,161,0,161,0,162,0,162,0,162,0,162,0,164,0,160,0,163,0,163,0,164,0,162,0,162,0,162,0,164,0,163,0,163,0,164,0,161,0,163,0,163,0,164,0,162,0,162,0,162,0,164,0,160,0,163,0,164,0,163,0,164,0,162,0,162,0,162,0,164,0,161,0,163,0,163,0,163,0,164,0,160,0,160,0,163,0,163,0,164,0,161,0,161,0,162,0,162,0,164,0,160,0,160,0,164,0,161,0,163,0,163,0,164,0,164,0,163,0,164,0,160,0,162,0,162,0,164,0,161,0,161,0,163,0,164,0,162,0,162,0,164,0,160,0,160,0,162,0,164,0,163,0,164,0,161,0,162,0,162,0,162,0,164,0,162,0,164,0,160,0,163,0,164,0,162,0,164,0,161,0,163,0,163,0,163,0,163,0,164,0,162,0,162,0,164,0,160,0,163,0,163,0,164,0,161,0,162,0,162,0,164,0,161,0,163,0,164,0,160,0,160,0,162,0,164,0,161,0,163,0,163,0,164,0,160,0,162,0,164,0,161,0,161,0,164,0,163,0,163,0,163,0,163,0,164,0,163,0,163,0,164,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0,159,0},
// bf_codes/b 693 71d328ad968b089823f2dfa2ad2ecf8f7ff3a52bda02c2
{696,0,696,0,696,0,696,0,696,0,696,0,696,0,700,44,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,695,0,695,0,695,0,697,0,701,7,694,0,697,0,698,0,694,0,694,0,698,0,695,0,696,0,696,0,698,0,694,0,696,0,696,0,698,0,697,0,698,0,695,0,695,0,696,0,698,0,694,0,697,0,697,0,697,0,698,0,696,0,696,0,696,0,698,0,695,0,696,0,698,0,697,0,697,0,697,0,698,0,696,0,696,0,698,0,694,0,697,0,697,0,698,0,694,0,697,0,697,0,698,0,695,0,695,0,698,0,696,0,698,0,697,0,698,0,694,0,694,0,696,0,696,0,698,0,696,0,698,0,695,0,696,0,696,0,696,0,696,0,698,0,694,0,697,0,698,0,695,0,697,0,697,0,698,0,696,0,696,0,698,0,697,0,697,0,697,0,697,0,697,0,698,0,694,0,698,0,695,0,698,0,696,0,696,0,696,0,698,0,694,0,698,0,695,0,696,0,698,0,697,0,697,0,698,0,696,0,696,0,696,0,698,0,695,0,698,0,694,0,698,0,695,0,697,0,698,0,694,0,698,0,698,0,694,0,696,0,698,0,695,0,697,0,697,0,697,0,697,0,697,0,698,0,695,0,697,0,697,0,698,0,697,0,697,0,697,0,698,0,694,0,696,0,698,0,696,0,696,0,698,0,697,0,697,0,697,0,698,0,695,0,697,0,697,0,698,0,696,0,696,0,698,0,694,0,696,0,696,0,698,0,695,0,698,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0,693,0},
// bf_codes/c 928 11c52927223cc09c1cd8ac11f29fd32e5fb025c6eacb72
{931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,935,41,929,0,931,0,931,0,931,0,931,0,931,0,931,0,929,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,929,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,930,0,930,0,930,0,932,0,936,8,929,0,931,0,933,0,933,0,929,0,931,0,931,0,931,0,933,0,929,0,932,0,932,0,932,0,933,0,930,0,930,0,931,0,933,0,929,0,929,0,931,0,931,0,931,0,931,0,933,0,930,0,930,0,933,0,929,0,929,0,932,0,932,0,933,0,930,0,930,0,933,0,933,0,931,0,933,0,929,0,933,0,933,0,930,0,932,0,932,0,932,0,933,0,929,0,929,0,931,0,931,0,933,0,930,0,933,0,930,0,931,0,933,0,929,0,933,0,931,0,933,0,929,0,932,0,933,0,930,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,930,0,933,0,933,0,929,0,931,0,931,0,931,0,933,0,930,0,931,0,933,0,929,0,929,0,931,0,933,0,930,0,933,0,932,0,932,0,933,0,930,0,931,0,933,0,932,0,933,0,929,0,931,0,933,0,930,0,931,0,931,0,931,0,933,0,929,0,931,0,933,0,932,0,932,0,932,0,932,0,933,0,930,0,932,0,932,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,931,0,931,0,931,0,933,0,929,0,931,0,933,0,930,0,931,0,933,0,929,0,931,0,931,0,933,0,932,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,932,0,933,0,930,0,931,0,933,0,932,0,932,0,932,0,932,0,932,0,933,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0},
// bf_codes/hint1 0 65736f746572696320747572696e67206d616368696e65
{3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,7,32,1,0,3,0,3,0,3,0,3,0,3,0,3,0,1,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,2,0,2,0,4,0,8,9,1,0,5,0,4,0,5,0,3,0,3,0,5,0,4,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,5,0,1,0,3,0,3,0,3,0,5,0,2,0,3,0,5,0,4,0,4,0,4,0,5,0,3,0,3,0,5,0,4,0,5,0,3,0,3,0,5,0,4,0,4,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,5,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,4,0,4,0,4,0,5,0,4,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,5,0,4,0,4,0,5,0,3,0,3,0,5,0,4,0,4,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,5,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,1,0,4,0,5,0,2,0,5,0,3,0,5,0,4,0,4,0,4,0,4,0,4,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,3,0,5,0,1,0,4,0,5,0,2,0,5,0,4,0,4,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,5,0,3,0,3,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,1,0,3,0,5,0,2,0,5,0,4,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// bf_codes/hint2 0 5f5f6e65656420746872656520664f522077696e215f5f
{3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,7,32,1,0,3,0,3,0,3,0,3,0,3,0,3,0,1,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,2,0,2,0,4,0,8,9,1,0,4,0,5,0,1,0,3,0,3,0,3,0,5,0,2,0,5,0,1,0,5,0,2,0,3,0,5,0,1,0,4,0,5,0,2,0,5,0,4,0,5,0,3,0,5,0,4,0,5,0,3,0,5,0,4,0,4,0,5,0,4,0,4,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,3,0,3,0,5,0,3,0,3,0,5,0,4,0,5,0,4,0,4,0,4,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,5,0,4,0,5,0,3,0,5,0,4,0,5,0,4,0,4,0,4,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,3,0,5,0,5,0,4,0,4,0,5,0,1,0,3,0,5,0,2,0,3,0,5,0,4,0,4,0,4,0,5,0,5,0,4,0,4,0,5,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,5,0,5,0,4,0,5,0,3,0,3,0,3,0,5,0,4,0,4,0,4,0,5,0,1,0,4,0,5,0,2,0,4,0,4,0,4,0,4,0,5,0,4,0,5,0,3,0,3,0,3,0,3,0,5,0,1,0,3,0,5,0,2,0,5,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
// const unsigned short PROGRAMS[][1024] = {
//     {42,0},// rand1, 42
//     {56,0},// rand2, 56
//     {12,0},// rand3, 12
//     // a, 548
//     {551,0,551,0,551,0,551,0,551,0,551,0,551,0,555,43,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,549,0,551,0,551,0,551,0,551,0,551,0,551,0,551,0,550,0,550,0,550,0,552,0,556,7,549,0,551,0,551,0,553,0,551,0,553,0,551,0,551,0,551,0,553,0,549,0,551,0,551,0,551,0,553,0,550,0,552,0,553,0,552,0,552,0,553,0,549,0,552,0,552,0,552,0,552,0,553,0,553,0,551,0,551,0,551,0,553,0,551,0,551,0,553,0,552,0,552,0,553,0,549,0,551,0,553,0,550,0,552,0,552,0,553,0,549,0,552,0,553,0,551,0,553,0,550,0,550,0,553,0,551,0,553,0,551,0,553,0,552,0,553,0,551,0,551,0,551,0,551,0,553,0,552,0,552,0,552,0,552,0,553,0,552,0,552,0,553,0,549,0,551,0,551,0,551,0,553,0,550,0,551,0,551,0,551,0,553,0,549,0,549,0,553,0,550,0,552,0,553,0,553,0,549,0,551,0,553,0,550,0,550,0,551,0,553,0,549,0,553,0,552,0,553,0,551,0,551,0,551,0,553,0,549,0,552,0,552,0,552,0,553,0,553,0,553,0,550,0,552,0,553,0,551,0,553,0,550,0,552,0,552,0,553,0,551,0,551,0,551,0,553,0,549,0,549,0,551,0,553,0,551,0,551,0,551,0,551,0,553,0,550,0,552,0,552,0,552,0,553,0,552,0,552,0,553,0,551,0,551,0,553,0,553,0,549,0,552,0,552,0,552,0,553,0,548,0},
//     {159,0},// rand4, 159
//     // b, 693
//     {696,0,696,0,696,0,696,0,696,0,696,0,696,0,700,44,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,694,0,696,0,696,0,696,0,696,0,696,0,696,0,696,0,695,0,695,0,695,0,697,0,701,7,694,0,697,0,698,0,694,0,694,0,698,0,695,0,696,0,696,0,698,0,694,0,696,0,696,0,698,0,697,0,698,0,695,0,695,0,696,0,698,0,694,0,697,0,697,0,697,0,698,0,696,0,696,0,696,0,698,0,695,0,696,0,698,0,697,0,697,0,697,0,698,0,696,0,696,0,698,0,694,0,697,0,697,0,698,0,694,0,697,0,697,0,698,0,695,0,695,0,698,0,696,0,698,0,697,0,698,0,694,0,694,0,696,0,696,0,698,0,696,0,698,0,695,0,696,0,696,0,696,0,696,0,698,0,694,0,697,0,698,0,695,0,697,0,697,0,698,0,696,0,696,0,698,0,697,0,697,0,697,0,697,0,697,0,698,0,694,0,698,0,695,0,698,0,696,0,696,0,696,0,698,0,694,0,698,0,695,0,696,0,698,0,697,0,697,0,698,0,696,0,696,0,696,0,698,0,695,0,698,0,694,0,698,0,695,0,697,0,698,0,694,0,698,0,698,0,694,0,696,0,698,0,695,0,697,0,697,0,697,0,697,0,697,0,698,0,695,0,697,0,697,0,698,0,697,0,697,0,697,0,698,0,694,0,696,0,698,0,696,0,696,0,698,0,697,0,697,0,697,0,698,0,695,0,697,0,697,0,698,0,696,0,696,0,698,0,694,0,696,0,696,0,698,0,695,0,698,0,693,0},
//     // c, 928
//     {931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,935,41,929,0,931,0,931,0,931,0,931,0,931,0,931,0,929,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,929,0,931,0,931,0,931,0,931,0,931,0,931,0,931,0,930,0,930,0,930,0,932,0,936,8,929,0,931,0,933,0,933,0,929,0,931,0,931,0,931,0,933,0,929,0,932,0,932,0,932,0,933,0,930,0,930,0,931,0,933,0,929,0,929,0,931,0,931,0,931,0,931,0,933,0,930,0,930,0,933,0,929,0,929,0,932,0,932,0,933,0,930,0,930,0,933,0,933,0,931,0,933,0,929,0,933,0,933,0,930,0,932,0,932,0,932,0,933,0,929,0,929,0,931,0,931,0,933,0,930,0,933,0,930,0,931,0,933,0,929,0,933,0,931,0,933,0,929,0,932,0,933,0,930,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,930,0,933,0,933,0,929,0,931,0,931,0,931,0,933,0,930,0,931,0,933,0,929,0,929,0,931,0,933,0,930,0,933,0,932,0,932,0,933,0,930,0,931,0,933,0,932,0,933,0,929,0,931,0,933,0,930,0,931,0,931,0,931,0,933,0,929,0,931,0,933,0,932,0,932,0,932,0,932,0,933,0,930,0,932,0,932,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,931,0,931,0,931,0,933,0,929,0,931,0,933,0,930,0,931,0,933,0,929,0,931,0,931,0,933,0,932,0,932,0,932,0,932,0,933,0,931,0,931,0,933,0,932,0,933,0,930,0,931,0,933,0,932,0,932,0,932,0,932,0,932,0,933,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0,928,0},
//     {0},// hint1, 
//     {0},// rand5
//     {0},// hint2
//     {0},// rand6
// };

std::vector<unsigned short> xor_vec(const std::vector<unsigned short>& a, const std::vector<unsigned short>& b) {
    std::vector<unsigned short> result;
    int len_a = a.size();
    int len_b = b.size();
    int len = std::max(len_a, len_b);
    for (int i = 0; i < len; i++) {
        int value_a = a[i % len_a];
        int value_b = b[i % len_b];
        result.push_back(value_a ^ value_b);
    }
    return result;
}

/* Quick and dirty conversion from a single character to its hex equivelent */
constexpr std::uint8_t char2int(char Input)
{
    return
    ((Input >= 'a') && (Input <= 'f'))
    ? (Input - 87)
    : ((Input >= 'A') && (Input <= 'F'))
    ? (Input - 55)
    : ((Input >= '0') && (Input <= '9'))
    ? (Input - 48)
    : throw std::exception{};
}

std::vector<unsigned short> from_hex(const std::vector<unsigned short>& a) {
    vector<unsigned short> out;
    for(int i = 0; i < a.size(); i+=2) {
        out.push_back((char2int(a.at(i))*16) + char2int(a.at(i+1)));
    }
    return out;
}

void level_3() {
    // TODO: 
    // - generate programs
    // - write from_hex

    // get input
    string key;
    cout << "Key: ";
    cin >> key;

    // v = rand1
    // if successfull
    //      v = rand1 xor rand2
    // else
    //      v = rand1 xor rand3

    vector<unsigned short> key_arr; // convert from key
    for(int i = 0; i < key.size(); i++) {
        key_arr.push_back(key[i]);
    }
    
    vector<unsigned short> v;
    vector<unsigned short> v2;
    if(!RUN_PROG(PROGRAMS[0], 42,v)) { // rand1
        RUN_PROG(PROGRAMS[1],56,v2); // rand2
    } else {
        RUN_PROG(PROGRAMS[2],12,v2); // rand3
    }
    cout << string(v.begin(),v.end()) << endl;
    cout << string(v2.begin(),v2.end()) << endl;
    auto a = from_hex(v);
    auto b = from_hex(v2);
    return;
    v = xor_vec(a,b);
    return;
    // v = rand1 xor rand3 xor key
    v = xor_vec(v,key_arr);


    // v2 = a
    // if successfull
    //      v2 = a xor b offset 693
    // else
    //      v2 = a xor b offset 159

    v2.clear();
    vector<unsigned short> v3;
    if(!RUN_PROG(PROGRAMS[3],548,v2)) { // a
        RUN_PROG(PROGRAMS[5],693,v3);   // b
    } else {
        RUN_PROG(PROGRAMS[5],159,v3);   // b
    }
    v2 = xor_vec(from_hex(v2),from_hex(v3));

    // v = v xor v2 = rand1 xor rand3 xor key xor a xor b
    v = xor_vec(v,v2);

    // v3 = rand4
    // if successfull
    //      v3 = rand4 xor c
    // else
    //      v3 = rand4 xor c

    v3.clear();
    vector<unsigned short> v4;
    if(!RUN_PROG(PROGRAMS[4],159,v3)) { // rand4
        RUN_PROG(PROGRAMS[6],928,v4);   // c
    } else {
        RUN_PROG(PROGRAMS[6],56,v4);    // c
    }
    // v3 = rand4 xor c
    v3 = xor_vec(from_hex(v3),from_hex(v4));

    v4.clear();
    // v4 = rand1
    RUN_PROG(PROGRAMS[0], 42,v4);
    // v4 = rand1 ^ key
    v4 = xor_vec(from_hex(v4), key_arr);

    vector<unsigned short> v5;
    // v5 = rand3
    RUN_PROG(PROGRAMS[2],12,v5);
    // v5 = key ^ rand3
    v5 = xor_vec(from_hex(v5), key_arr);

    // v6 = rand4
    vector<unsigned short> v6;
    RUN_PROG(PROGRAMS[4],159,v6);

    v = xor_vec(xor_vec(v,v5),xor_vec(xor_vec(v3,v4),from_hex(v6)));
    for(int i = 0; i < v.size(); i++) {
        if(v[i] != 0) {
            cout << "You have failed" << endl;
            return;
        }
    }
    cout << "You won!!! Game Clear" << endl;


    // v = v^v3^v4^v5^v6 
    //   = v ^ rand4^c ^ rand1^key ^ rand3^key ^ rand4
    //   = v ^ c ^ rand1 ^ rand3 
    //   = key^a^b^c 

    // check if zero
}


int main() {
    vector<unsigned short> v,v2;
    execute_bf((instruction_t*)PROGRAMS[3], 548, v);
    v2 = from_hex(v);
    v.clear();
    execute_bf((instruction_t*)PROGRAMS[5],693, v);
    v2 = xor_vec(from_hex(v),v2);
    v.clear();
    execute_bf((instruction_t*)PROGRAMS[6],928, v);
    v2 = xor_vec(from_hex(v),v2);
    v.clear();
    cout << string(v2.begin(),v2.end()) << endl;
    level_3();
}